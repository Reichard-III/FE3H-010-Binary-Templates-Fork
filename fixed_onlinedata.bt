//------------------------------------------------
//--- 010 Editor v15.0.2 Binary Template
//
//      File: fixed_onlinedata.bt
//   Authors: Reichard
//   Version: 1.0
//   Purpose: parse fixed_onlinedata.bin
//  Category: Reichard
// File Mask: *fixed_onlinedata.bin
//  ID Bytes: 
//   History: 
//   1.0    09/04/25 ReichardTheThird: Started this
//------------------------------------------------

#include "Structs.bt"

LittleEndian();
local int i =0;

struct sEntry0{
    byte unkbyte0x0;
    byte unkbyte0x1;
    short unkbyte0x2;
    
    byte unkbyte0x4;
    byte unkbyte0x5;
};

struct sEntry1{
    CharID unkShort0x0[4];
    byte unkArray[4];
};

struct sEntry2{
    byte NumRolls;
    byte otherNumRolls;
    byte unkbyte0x2[10];
    
    byte unkbyte0xc[10];
    byte unkbyte0x16[3];
    byte unkbyte0x19[3];
};

struct sEntry3{
    CharID CharsID;
    byte Chapter;
    byte unkbyte0x3<name="padding?">;
};

struct sEntry4{
    ushort XMax;
    ushort XMin;
    
    ushort YMin;
    ushort YMax;
    
    byte unkbyte0x8;
    byte unkbyte0x9<name="padding?">;
};

struct sEntry0s{
    DataSection Header;
    for(i=0; i<Header.NumEntries;i++){
        sEntry0 E;
    }
};

struct sEntry1s{
    DataSection Header;
    for(i=0; i<Header.NumEntries;i++){
        sEntry1 e;
    }
};

struct sEntry2s{
    DataSection Header;
    for(i=0; i<Header.NumEntries;i++){
        sEntry2 e;
    }
};

struct sEntry3s{
    DataSection Header;
    for(i=0; i<Header.NumEntries;i++){
        sEntry3 e<read=Str("Chapter %d - %s",Chapter, EnumToString(CharsID))>;
    }
};

struct sEntry4s{
    DataSection Header;
    for(i=0; i<Header.NumEntries;i++){
        sEntry4 e;
    }
};

struct sFile {
    FileSections Sections;
    sEntry0s E0s;
    sEntry1s E1s;
    sEntry2s E2s;
    sEntry3s E3s;
    sEntry4s E4s;
}File<open=true>;