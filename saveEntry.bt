//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: Save File from Falo's Save Editor
//   Authors: Triabolical, ReichardTheThird
//   Version: 1.0
//   Purpose: Map out Character File Exports
//  Category: Reichard
// File Mask: slot*
//  ID Bytes: 
//   History: 
//   1.2    10/18/25 ReichardTheThird: Renamed from Character.bt to SaveEntry.bt    
//   1.1    06/07/25 ReichardTheThird: Added BattalionReserve @ 0x250f8
//                                      Changed to use "include_enums.bt" instead
//   1.0    02/16/25 ReichardTheThird: Started taking over maintainance and updates from previous authors
//------------------------------------------------
#include "Structs.bt"
LittleEndian();
local int i;
struct ItemBlock {
	Item_Adjusted item<bgcolor=cGreen>;
	byte remainingDurability;
	byte count<bgcolor=cLtGreen>;
};

struct BattalionData {
	CharID character;
	ushort Exp;
	ushort Endurance;
	BattalionID battalion;
	byte Gambit;
};
struct SkillExp {
	ushort Sword;
	ushort Lance;
	ushort Axe;
	ushort Bow;
	ushort Brawl;
	ushort Reason;
	ushort Faith;
	ushort Authority;
	ushort HeavyArmor;
	ushort Riding;
	ushort Flying;
};

struct BaseAbilityUnlock {
	ubyte ability0:1<name="0_Sword_Prowess_Lv1">;
	ubyte ability1:1<name="1_Sword_Prowess_Lv2">;
	ubyte ability2:1<name="2_Sword_Prowess_Lv3">;
	ubyte ability3:1<name="3_Sword_Prowess_Lv4">;
	ubyte ability4:1<name="4_Sword_Prowess_Lv5">;
	ubyte ability5:1<name="5_Lance_Prowess_Lv1">;
	ubyte ability6:1<name="6_Lance_Prowess_Lv2">;
	ubyte ability7:1<name="7_Lance_Prowess_Lv3">;
	ubyte ability8:1<name="8_Lance_Prowess_Lv4">;
	ubyte ability9:1<name="9_Lance_Prowess_Lv5">;
	ubyte ability10:1<name="10_Axe_Prowess_Lv1">;
	ubyte ability11:1<name="11_Axe_Prowess_Lv2">;
	ubyte ability12:1<name="12_Axe_Prowess_Lv3">;
	ubyte ability13:1<name="13_Axe_Prowess_Lv4">;
	ubyte ability14:1<name="14_Axe_Prowess_Lv5">;
	ubyte ability15:1<name="15_Bow_Prowess_Lv1">;
	ubyte ability16:1<name="16_Bow_Prowess_Lv2">;
	ubyte ability17:1<name="17_Bow_Prowess_Lv3">;
	ubyte ability18:1<name="18_Bow_Prowess_Lv4">;
	ubyte ability19:1<name="19_Bow_Prowess_Lv5">;
	ubyte ability20:1<name="20_Brawling_Prowess_Lv1">;
	ubyte ability21:1<name="21_Brawling_Prowess_Lv2">;
	ubyte ability22:1<name="22_Brawling_Prowess_Lv3">;
	ubyte ability23:1<name="23_Brawling_Prowess_Lv4">;
	ubyte ability24:1<name="24_Brawling_Prowess_Lv5">;
	ubyte ability25:1<name="25_Reason_Prowess_Lv1">;
	ubyte ability26:1<name="26_Reason_Prowess_Lv2">;
	ubyte ability27:1<name="27_Reason_Prowess_Lv3">;
	ubyte ability28:1<name="28_Reason_Prowess_Lv4">;
	ubyte ability29:1<name="29_Reason_Prowess_Lv5">;
	ubyte ability30:1<name="30_Faith_Prowess_Lv1">;
	ubyte ability31:1<name="31_Faith_Prowess_Lv2">;
	ubyte ability32:1<name="32_Faith_Prowess_Lv3">;
	ubyte ability33:1<name="33_Faith_Prowess_Lv4">;
	ubyte ability34:1<name="34_Faith_Prowess_Lv5">;
	ubyte ability35:1<name="35_Authority_Prowess_Lv1">;
	ubyte ability36:1<name="36_Authority_Prowess_Lv2">;
	ubyte ability37:1<name="37_Authority_Prowess_Lv3">;
	ubyte ability38:1<name="38_Authority_Prowess_Lv4">;
	ubyte ability39:1<name="39_Authority_Prowess_Lv5">;
	ubyte ability40:1<name="40_Swordfaire">;
	ubyte ability41:1<name="41_Lancefaire">;
	ubyte ability42:1<name="42_Axefaire">;
	ubyte ability43:1<name="43_Bowfaire">;
	ubyte ability44:1<name="44_Fistfaire">;
	ubyte ability45:1<name="45_Black_Tomefaire">;
	ubyte ability46:1<name="46_White_Tomefaire">;
	ubyte ability47:1<name="47_Dark_Tomefaire">;
	ubyte ability48:1<name="48_Sword_Crit_Plus_10">;
	ubyte ability49:1<name="49_Lance_Crit_Plus_10">;
	ubyte ability50:1<name="50_Axe_Crit_Plus_10">;
	ubyte ability51:1<name="51_Bow_Crit_Plus_10">;
	ubyte ability52:1<name="52_Brawl_Crit_Plus_10">;
	ubyte ability53:1<name="53_Black_Magic_Cirt_Plus_10">;
	ubyte ability54:1<name="54_White_Magic_Crit_Plus_10">;
	ubyte ability55:1<name="55_Dark_Magic_Cirt_Plus_10">;
	ubyte ability56:1<name="56_Sword_Avo_Plus_20">;
	ubyte ability57:1<name="57_Lance_Avo_Plus_20">;
	ubyte ability58:1<name="58_Axe_Avo_Plus_20">;
	ubyte ability59:1<name="59_Bow_Avo_Plus_20">;
	ubyte ability60:1<name="60_Brawl_Avo_Plus_20">;
	ubyte ability61:1<name="61_Black_Magic_Avo_Plus_20">;
	ubyte ability62:1<name="62_White_Magic_Avo_Plus_20">;
	ubyte ability63:1<name="63_Dark_Magic_Avo_Plus_20">;
	ubyte ability64:1<name="64_HP_Plus_5">;
	ubyte ability65:1<name="65_Strangth_Plus_2">;
	ubyte ability66:1<name="66_Magic_Plus_2">;
	ubyte ability67:1<name="67_Dexterity_Plus_">;
	ubyte ability68:1<name="68_Speed_Plus_2">;
	ubyte ability69:1<name="69_Pomp_and_Circumstance">;
	ubyte ability70:1<name="70_Defense_Plus_2">;
	ubyte ability71:1<name="71_Resistance_Plus_2">;
	ubyte ability72:1<name="72_Movement_Plus_1">;
	ubyte ability73:1<name="73_Hit_Plus_20">;
	ubyte ability74:1<name="74_Avo_Plus_20">;
	ubyte ability75:1<name="75_Crit_Plus_20">;
	ubyte ability76:1<name="76_Defiant_Str">;
	ubyte ability77:1<name="77_Defiant_Mag">;
	ubyte ability78:1<name="78_Defiant_Spd">;
	ubyte ability79:1<name="79_Defiant_Def">;
	ubyte ability80:1<name="80_Defiant_Res">;
	ubyte ability81:1<name="81_Defiant_Avo">;
	ubyte ability82:1<name="82_Defiant_Crit">;
	ubyte ability83:1<name="83_Imperial_Lineage">;
	ubyte ability84:1<name="84_Royal_Lineage">;
	ubyte ability85:1<name="85_Leicester_Lineage">;
	ubyte ability86:1<name="86_Mastermind">;
	ubyte ability87:1<name="87_Death_Blow">;
	ubyte ability88:1<name="88_Fiendish_Blow">;
	ubyte ability89:1<name="89_Darting_Blow">;
	ubyte ability90:1<name="90_Armored_Blow">;
	ubyte ability91:1<name="91_Warding_Blow">;
	ubyte ability92:1<name="92_Officer_Duty">;
	ubyte ability93:1<name="93_Lady_Knight">;
	ubyte ability94:1<name="94_Watchful_Eye">;
	ubyte ability95:1<name="95_Distinguished_House">;
	ubyte ability96:1<name="96_Veteran_Knight">;
	ubyte ability97:1<name="97_Charm_Ability">;
	ubyte ability98:1<name="98_Advocate">;
	ubyte ability99:1<name="99_Guardian">;
	ubyte ability100:1<name="100_Lilys_Poise">;
	ubyte ability101:1<name="101_Infirmary_Master">;
	ubyte ability102:1<name="102_Philanderer">;
	ubyte ability103:1<name="103_Rivalry">;
	ubyte ability104:1<name="104_Born_Fighter">;
	ubyte ability105:1<name="105_Rally_Strength">;
	ubyte ability106:1<name="106_Rally_Magic">;
	ubyte ability107:1<name="107_Rally_Speed">;
	ubyte ability108:1<name="108_Rally_Defense">;
	ubyte ability109:1<name="109_Rally_Resistance">;
	ubyte ability110:1<name="110_Rally_Movement">;
	ubyte ability111:1<name="111_Rally_Dexterity">;
	ubyte ability112:1<name="112_Rally_Luck">;
	ubyte ability113:1<name="113_Rally_Charm">;
	ubyte ability114:1<name="114_Seal_Strength">;
	ubyte ability115:1<name="115_Seal_Magic">;
	ubyte ability116:1<name="116_Seal_Speed">;
	ubyte ability117:1<name="117_Seal_Defense">;
	ubyte ability118:1<name="118_Seal_Resistance">;
	ubyte ability119:1<name="119_Seal_Movement">;
	ubyte ability120:1<name="120_Heartseeker">;
	ubyte ability121:1<name="121_Swordbreaker_Plus">;
	ubyte ability122:1<name="122_Lancebreaker_Plus">;
	ubyte ability123:1<name="123_Axebreaker_Plus">;
	ubyte ability124:1<name="124_Bowbreaker">;
	ubyte ability125:1<name="125_Fistbreaker">;
	ubyte ability126:1<name="126_Tomebreaker">;
	ubyte ability127:1<name="127_Model_Leader">;
	ubyte ability128:1<name="128_Defensive_Tactics">;
	ubyte ability129:1<name="129_Offensive_Tactics">;
	ubyte ability130:1<name="130_Fire_Ablilty">;
	ubyte ability131:1<name="131_Miasma_Ablilty">;
	ubyte ability132:1<name="132_Heal_Ablilty">;
	ubyte ability133:1<name="133_Renewal_Ablilty">;
	ubyte ability134:1<name="134_Catnap">;
	ubyte ability135:1<name="135_Goody_Basket">;
	ubyte ability136:1<name="136_Songstress">;
	ubyte ability137:1<name="137_Hunters_Boon">;
	ubyte ability138:1<name="138_Poison_Strike">;
	ubyte ability139:1<name="139_Live_to_Serve">;
	ubyte ability140:1<name="140_Lifetaker">;
	ubyte ability141:1<name="141_Survival_Instinct">;
	ubyte ability142:1<name="142_Lethality">;
	ubyte ability143:1<name="143_Poison">;
	ubyte ability144:1<name="144_Pavise">;
	ubyte ability145:1<name="145_Aegis">;
	ubyte ability146:1<name="146_Miracle">;
	ubyte ability147:1<name="147_Terrain_Resistance">;
	ubyte ability148:1<name="148_Special_Dance">;
	ubyte ability149:1<name="149_Paragon">;
	ubyte ability150:1<name="150_Professors_Guidance">;
	ubyte ability151:1<name="151_Discipline">;
	ubyte ability152:1<name="152_Aptitude">;
	ubyte ability153:1<name="153_Vantage">;
	ubyte ability154:1<name="154_Missing_Number">;
	ubyte ability155:1<name="155_Desperation">;
	ubyte ability156:1<name="156_Quick_Riposte">;
	ubyte ability157:1<name="157_Wrath">;
	ubyte ability158:1<name="158_Dance">;
	ubyte ability159:1<name="159_Steal">;
	ubyte ability160:1<name="160_Locktouch">;
	ubyte ability161:1<name="161_Stealth">;
	ubyte ability162:1<name="162_Canto">;
	ubyte ability163:1<name="163_Pass">;
	ubyte ability164:1<name="164_Swordbreaker">;
	ubyte ability165:1<name="165_Lancebreaker">;
	ubyte ability166:1<name="166_Bowrange_Plus_1">;
	ubyte ability167:1<name="167_Bowrange_Plus_2">;
	ubyte ability168:1<name="168_Black_Magic_Range_Plus_1">;
	ubyte ability169:1<name="169_Dark_Magic_Range_Plus_1">;
	ubyte ability170:1<name="170_White_Magic_Range_Plus_1">;
	ubyte ability171:1<name="171_Unarmed_Combat">;
	ubyte ability172:1<name="172_Black_Magic_Uses_x2">;
	ubyte ability173:1<name="173_Dark_Magic_Uses_x2">;
	ubyte ability174:1<name="174_White_Magic_Uses_x2">;
	ubyte ability175:1<name="175_White_Magic_Heal_Plus_5">;
	ubyte ability176:1<name="176_White_Magic_Heal_Plus_10">;
	ubyte ability177:1<name="177_Weight_Minus_3">;
	ubyte ability178:1<name="178_Weight_Minus_5">;
	ubyte ability179:1<name="179_Axebreaker">;
	ubyte ability180:1<name="180_Unsealable_Magic">;
	ubyte ability181:1<name="181_Immune_Status">;
	ubyte ability182:1<name="182_General">;
	ubyte ability183:1<name="183_Commander">;
	ubyte ability184:1<name="184_Infinite_Magic">;
	ubyte ability185:1<name="185_Magic_Bind">;
	ubyte ability186:1<name="186_Infantry_Effect_Null">;
	ubyte ability187:1<name="187_Armored_Effect_Null">;
	ubyte ability188:1<name="188_Cavalry_Effect_Null">;
	ubyte ability189:1<name="189_Flying_Effect_Null">;
	ubyte ability190:1<name="190_Dragon_Effect_Null">;
	ubyte ability191:1<name="191_Monster_Effect_Null">;
	ubyte ability192:1<name="192_Effect_Null">;
	ubyte ability193:1<name="193_Air_of_Intimidation">;
	ubyte ability194:1<name="194_Vital_Defense">;
	ubyte ability195:1<name="195_Giant_Wings">;
	ubyte ability196:1<name="196_Anti_Magic_Armor">;
	ubyte ability197:1<name="197_Divine_Dragon_Horn">;
	ubyte ability198:1<name="198_Path_of_the_Conqueror">;
	ubyte ability199:1<name="199_Noncombatant">;
	ubyte ability200:1<name="200_Battalion_Desperation">;
	ubyte ability201:1<name="201_Cursed_Power">;
	ubyte ability202:1<name="202_Anchor">;
	ubyte ability203:1<name="203_Counterattack">;
	ubyte ability204:1<name="204_Twin_Crests">;
	ubyte ability205:1<name="205_Ancient_Dragon_Wrath">;
	ubyte ability206:1<name="206_Surging_Light">;
	ubyte ability207:1<name="207_Ancient_Dragonskin">;
	ubyte ability208:1<name="208_Keen_Intuition">;
	ubyte ability209:1<name="209_Staunch_Shield">;
	ubyte ability210:1<name="210_Lone_Wolf">;
	ubyte ability211:1<name="211_Fighting_Spirit">;
	ubyte ability212:1<name="212_Confidence">;
	ubyte ability213:1<name="213_Persecution_Complex">;
	ubyte ability214:1<name="214_Animal_Friend">;
	ubyte ability215:1<name="215_Perseverance">;
	ubyte ability216:1<name="216_Crest_Scholar">;
	ubyte ability217:1<name="217_Compassion">;
	ubyte ability218:1<name="218_Lockpick">;
	ubyte ability219:1<name="219_Battalion_Vantage">;
	ubyte ability220:1<name="220_Battalion_Wrath">;
	ubyte ability221:1<name="221_Battalion_Renewal">;
	ubyte ability222:1<name="222_Black_Magic_Uses_x4">;
	ubyte ability223:1<name="223_Dark_Magic_Uses_x4">;
	ubyte ability224:1<name="224_White_Magic_Uses_x4">;
	ubyte ability225:1<name="225_Mighty_King_of_Legend">;
	ubyte ability226:1<name="226_Ten_Elites">;
	ubyte ability227:1<name="227_Alert_Stance">;
	ubyte ability228:1<name="228_Alert_Stance_Plus">;
	ubyte ability229:1<name="229_Close_Counter">;
	ubyte ability230:1<name="230_Professors_Guidance_Plus">;
	ubyte ability231:1<name="231_Imperial_Lineage_Plus">;
	ubyte ability232:1<name="232_Royal_Lineage_Plus">;
	ubyte ability233:1<name="233_Leicester_Lineage_Plus">;
	ubyte ability234:1<name="234_Murderous_Intent">;
	ubyte ability235:1<name="235_Sacred_Power">;
	ubyte ability236:1<name="236_Agarthan_Technology">;
	ubyte ability237:1<name="237_Blade_Breaker">;
	ubyte ability238:1<name="238_Lucky_Seven">;
	ubyte ability239:1<name="239_Transmute">;
};

struct DLCAbilityUnlock {
	ubyte ability241:1<name="241_Honorable_Spirit">;
	ubyte ability242:1<name="242_King_of_Grappling">;
	ubyte ability243:1<name="243_Circadian_Beat">;
	ubyte ability244:1<name="244_Monstrous_Appeal">;
	ubyte ability245:1<name="245_Business_Prosperity">;
	ubyte ability246:1<name="246_Umbral_Leech">;
	ubyte ability247:1<name="247_Manifest_Phantom">;
	ubyte ability248:1<name="248_Enhanced_Fortitude">;
	ubyte ability249:1<name="249_Unused">;
	ubyte ability250:1<name="250_Duelists_Blow">;
	ubyte ability251:1<name="251_Unused">;
	ubyte ability252:1<name="252_Unused">;
	ubyte ability253:1<name="253_Unused">;
	ubyte ability254:1<name="254_Unused">;
};

struct ClassUnlock {
	ubyte Ability00:1;
	ubyte Ability01:1;
	ubyte Ability02:1;
	ubyte Ability03:1;
	ubyte Ability04:1;
	ubyte Ability05:1;
	ubyte Ability06:1;
	ubyte Ability07:1;
};
struct UnitFlags {
	int32 Flag0:1<name="IsAvailable?">;
	int32 Flag1:1<name="HasJoined?">;
	int32 Flag2:1<name="Dead And Unrecruited">;
	int32 Flag3:1<name="Is Dead">;
	int32 Flag4:1<name="HideSecondCrest?">;
	int32 Flag5:1<name="Is currently Mounted?">;
	int32 Flag6:1<name="Sword budding Talent">;
	int32 Flag7:1<name="Lance budding Talent">;
	int32 Flag8:1<name="Axe budding Talent">;
	int32 Flag9:1<name="Bow budding Talent">;
	int32 Flag10:1<name="Brawling budding Talent">;
	int32 Flag11:1<name="Reason budding Talent">;
	int32 Flag12:1<name="Faith budding Talent">;
	int32 Flag13:1<name="Authority budding Talent">;
	int32 Flag14:1<name="Heavy Armor budding Talent">;
	int32 Flag15:1<name="Riding budding Talent">;
	int32 Flag16:1<name="Flying budding Talent">;
	int32 Flag17:1<name="BylethGreenHair/ Dimitri Anger">;
	int32 Flag18:1<name="Deployed?">;
	int32 Flag19:1<name="Force on Map">;
	int32 Flag20:1<name="Assigned Adjutant">;
	int32 Flag21:1<name="Battalion Equipped">;
	int32 Flag22:1<name="Byleth Support Queued Up">;
	int32 Flag23:1<name="Reject Tea Time">;
	int32 Flag24:1<name="Something Personal?">;
	int32 Flag25:1;
	int32 Flag26:1;
	int32 Flag27:1;
	int32 Flag28:1;
	int32 Flag29:1;
	int32 Flag30:1;
	int32 Flag31:1;
};
// Size of 588
struct CombatArtUnlock {
	ubyte CA0:1<name="Sunder">;
	ubyte CA1:1<name="Wrath_Strike">;
	ubyte CA2:1<name="Grounder">;
	ubyte CA3:1<name="Hexblade">;
	ubyte CA4:1<name="Windsweep">;
	ubyte CA5:1<name="Haze_Slice">;
	ubyte CA6:1<name="Subdue">;
	ubyte CA7:1<name="Bane_of_Monsters">;
	ubyte CA8:1<name="Finesse_Blade">;
	ubyte CA9:1<name="Soulblade">;
	ubyte CA10:1<name="Tempest_Lance">;
	ubyte CA11:1<name="Shatter_Slash">;
	ubyte CA12:1<name="Knightkneeler">;
	ubyte CA13:1<name="Hit_and_Run">;
	ubyte CA14:1<name="Monster_Piercer">;
	ubyte CA15:1<name="Lance_Jab">;
	ubyte CA16:1<name="Vengeance">;
	ubyte CA17:1<name="Glowing_Ember">;
	ubyte CA18:1<name="Swift_Strikes">;
	ubyte CA19:1<name="Frozen_Lance">;
	ubyte CA20:1<name="Smash">;
	ubyte CA21:1<name="Spike">;
	ubyte CA22:1<name="Helm_Splitter">;
	ubyte CA23:1<name="Monster_Breaker">;
	ubyte CA24:1<name="Diamond_Axe">;
	ubyte CA25:1<name="Exhaustive_Strike">;
	ubyte CA26:1<name="Armored_Strike">;
	ubyte CA27:1<name="Wild_Abandon">;
	ubyte CA28:1<name="Focused_Strike">;
	ubyte CA29:1<name="Lightning_Axe">;
	ubyte CA30:1<name="Curved_Shot">;
	ubyte CA31:1<name="Deadeye">;
	ubyte CA32:1<name="Heavy_Draw">;
	ubyte CA33:1<name="Encloser">;
	ubyte CA34:1<name="Ward_Arrow">;
	ubyte CA35:1<name="PointBlank_Volley">;
	ubyte CA36:1<name="Monster_Blast">;
	ubyte CA37:1<name="Waning_Shot">;
	ubyte CA38:1<name="Break_Shot">;
	ubyte CA39:1<name="Schism_Shot">;
	ubyte CA40:1<name="Healing_Focus">;
	ubyte CA41:1<name="Draining_Blow">;
	ubyte CA42:1<name="Mighty_Blow">;
	ubyte CA43:1<name="Bombard">;
	ubyte CA44:1<name="Rushing_Blow">;
	ubyte CA45:1<name="Fading_Blow">;
	ubyte CA46:1<name="Mystic_Blow">;
	ubyte CA47:1<name="Nimble_Combo">;
	ubyte CA48:1<name="OneTwo_Punch">;
	ubyte CA49:1<name="Monster_Crusher">;
	ubyte CA50:1<name="Swap">;
	ubyte CA51:1<name="Shove">;
	ubyte CA52:1<name="Reposition">;
	ubyte CA53:1<name="Draw_Back">;
	ubyte CA54:1<name="Smite">;
	ubyte CA55:1<name="Foudroyant_Strike">;
	ubyte CA56:1<name="Beast_Fang">;
	ubyte CA57:1<name="Ruptured_Heaven">;
	ubyte CA58:1<name="Ruined_Sky">;
	ubyte CA59:1<name="Atrocity">;
	ubyte CA60:1<name="Burning_Quake">;
	ubyte CA61:1<name="Apocalyptic_Flame">;
	ubyte CA62:1<name="Dust">;
	ubyte CA63:1<name="Fallen_Star">;
	ubyte CA64:1<name="Raging_Storm">;
	ubyte CA65:1<name="Fallen_Heaven">;
	ubyte CA66:1<name="Triangle_Attack">;
	ubyte CA67:1<name="Hunter_Volley">;
	ubyte CA68:1<name="Assassinate">;
	ubyte CA69:1<name="Fierce_Iron_Fist">;
	ubyte CA70:1<name="Astra">;
	ubyte CA71:1<name="Paraselene">;
	ubyte CA72:1<name="Wind_God">;
	ubyte CA73:1<name="Flickering_Flower">;
	ubyte CA74:1<name="War_Master_Strike">;
	ubyte CA75:1<name="Sublime_Heaven">;
	ubyte CA76:1<name="Sword_Dance">;
	ubyte CA77:1<name="FoulPlay">;
	ubyte CA78:1<name="Eviscerate">;
	ubyte CA79:1<name="PneumaGale">;
};
struct CharacterBlock {
	ItemBlock CharacterItem[6]<read=EnumToString(item)>;
	BattalionData battalion<read=EnumToString(battalion), bgcolor=cGray>;
	uint seed<bgcolor=cRed, name="Seed">;
	CharID ID<name="ID", bgcolor=cBlue>;
	short unk<bgcolor=cYellow>;
	short unk2<bgcolor=cYellow>;
	short unk3<bgcolor=cYellow>;
	short exp;
	short equipped_item;
	short Accessory_item_equipped;
	SkillExp skill_exp;
	short current_class_exp;
	ubyte Level;
	ubyte Class;
	ubyte MaxHP;
	ubyte HPModifier;
	Stats CurrentStats;
	CombatArtUnlock CombatArtAvailable<name="Combat Arts Unlocked", bgcolor=cDkRed>;
	BaseAbilityUnlock BaseGameAbilities<name="Unlocked Base Abilities", bgcolor=cDkBlue>;
	AbilityID EquippedAbilities[5]<name="Equipped Abilities", bgcolor=cBlue>;
	CombatArtID EquippedCombatArts[3]<name="Equipped Combat Arts", bgcolor=cRed>;
	ubyte ItemCount;
	StartingRanks CurrentSkillLevel<name="Skill MinRankss", bgcolor=cYellow>;
	ubyte ClassLevel;
	ubyte MagicDuarability[12]<name="Magic Duarability", bgcolor=cPurple>;
	SpellID MagicEquipped[12]<name="Magic Equipped", bgcolor=cPurple>;
	UnitFlags flags<bgcolor=cSilver>;
	byte CurrentCostume;
	byte QuestMarkerMaybe;
	byte CostumeFlags;
	byte unk_0xB3;
	byte CookingBoost[4];
	byte unk_0xb8[6];
	DLCAbilityUnlock AbilityAvailableSet2<name="Unlocked DLC Abilities", bgcolor=cBlue>;
	byte UnknownValues0xc0[4]<bgcolor=cBlack>;
	byte Motivation;
	
	byte TimesGiftedMaybe;
	byte TimesInstructed[11];
	byte UnknownV[2]<bgcolor=cBlack>;
	ClassUnlock ClassUnlockFlagsSet1[8];
	byte LearningGoal<bgcolor=cRed>;
	
	byte unknown;
	byte MonthlyCharmIncreaseMaybe;
	byte TotalTeaTimes;
	struct sMonasteryStatus{
		byte HasEaten:1;
		byte flag1:1;
		byte flag2:1;
		byte flag3:1;
		byte flag4:1;
		byte HasUsedSauna:1;
		byte SaunaRelaxed:1;
		byte SaunaVeryRelaxe:1;


	}MonasteryStatus;
	byte unknownX[2];
	byte TotalTeaCharmCountMaybe;
	
	ClassUnlock ClassUnlockFlagsSet2[3];
	short RecruitmentRelated[4];
	/*
	short unk_26;
	short unk_28;
	byte unk_2A;
	byte unk_2B;
	MinRanks Exp<name="EXP", bgcolor=cBlue>;
	FSeek(0x32);
	SkillExp Wexp<bgcolor=cGreen>;
	short classEXP<name="Class EXP", bgcolor=cBlue>;
	ubyte currentLevel<name="Level", bgcolor=cLtGreen>;
	CID currentClass<name="Class">;
	ubyte HP<bgcolor=cRed>;
	byte unk_4D;
	Stat characterStats<name="Character Stats", bgcolor=cRed>;
	FSeek(0x7F);
	AbilityID EquippedAbilities[5]<bgcolor=cYellow>;
	CombatArtID Equipped_CombatArts[3];
	FSeek(0x88);
	SkillMinRanks WeaponMinRanks<bgcolor=cYellow>;
	FSeek(0xFC);
	SkillExp Wexp2<bgcolor=cGreen, comment="Not sure why there are two copies of Skill Exp here...">;
	FSeek(0x1DC);
	SkillMinRanks WeaponMinRanks2<bgcolor=cYellow, comment="Not sure why there are two copies of Skill MinRankss here...">;
	*/
	byte junk[12];
	short adjutantID;
	short SkillExp2[11];
	short class_exp[100]<bgcolor=cBlue>;
	byte deploy;
	byte deploy_slot;
	StartingRanks skill_level2<bgcolor=cRed>;
	byte class_level[100]<bgcolor=cGreen>;
	byte unknown_possiblyPadding;
};

struct SaveHeader {
	int value;
	int version;
	int hash;
}header;
ItemBlock items[400]<name="Items">;
int item_count;
CharacterBlock character[60]<read=EnumToString(ID)>;
char PlayerName[40];
//uint m_NPC;
byte unkByte0x903c;
byte BylethBirthMonth<comment="the Month is 0 indexed, i.e. 0 = January (1st month)">;
byte BylethBirthDay;


FSeek(0x23200-0x1b);
struct sPlayerData{
	byte unkByte[8];
	struct sOnlineCharacter{
		byte unkByte0x0[0x34];
		CharID CharacterID;
		byte unkByte0x36[0x17a];
	}OnlineCharacter[5];
	ubyte unk0x878[0x1b8];
	
	struct sBattalionBarracks{
		for(i=0;i<200;i++){
			struct sBattalionBarracksEntry{
				local string display;
				CharID AssignedCharacter;
				ushort BattalionExp;
				ushort BattalionEndurance;
				BattalionID battID;
				GambitType GambitID;
				display += Str("%s - ", EnumToString(AssignedCharacter));
				display += EnumToString(battID);
			}BattalionBarracksEntry<read = display>;
		}
	}BattalionBarracks;
	
	uint Playtime;
	uint Money;
	uint unkownInt0x1078;
	uint Chapter;
	ushort SupportExp[270];
	Difficulty DifficultyLevel;
	ubyte GameMode;
	ubyte Route;
	ubyte Timeskip;
	ubyte MoreFlags_UnsureDueToRandom39BytesBelow[234];
	
	
	ubyte wtf[39];
	
	
	struct sStorehouseItems{
		for(i=0;i<223;i++){
			struct sStorehouseItemsEntry{
				local string display;
				local MiscItem Name;
				Name= i;
				
				ubyte StorehouseItems;
				display+=Str("%d - ",StorehouseItems);
				display += EnumToString(Name);
			}StorehouseItemsEntry<read = display>;
		};
	}StorehouseItems;
	
	struct sLostItemsCount{
		for(i=0;i<225;i++){
			struct sLostItemsCountEntry{
				local string display;
				local Gifts Name;
				Name= i;
				
				ubyte StorehouseItems;
				display+=Str("%d - ",StorehouseItems);
				display += EnumToString(Name);
			}LostItemsCountEntry<read = display>;
		};
	}LostItemsCount;
	
	byte unk0x1571[0x25f];
	byte GameCompletionCount;
	byte unk0x15d1[3];
	byte mapRngSeed_;
	byte unk0x17d5[0x5be];
	
	
	struct sLostItemsCount2{
		for(i=0;i<245;i++){
			struct sLostItemsCountEntry2{
				local string display;
				local Gifts Name;
				Name= i;
				
				ubyte StorehouseItems;
				display+=Str("%d - ",StorehouseItems);
				display += EnumToString(Name);
			}LostItemsCountEntry2<read = display>;
		};
	}LostItemsCount2;
}PlayerData;




FSeek(0x250c8-0x1b);
struct sActivities{
	byte chicken[0xc];
	uint Renown;
	byte unkActivityBytes0x10[2];
	ushort ProfessorExp;
	CharID BylethSupportVisitList_[7];
	CharID UnkCharsMaybe_[2];
	byte CalendarDay;
	byte ActivityExplore;
	byte ActivityLesson;
	byte ActivityBattle;
	byte unkLOL;
	struct sSaintStatue_UpgradeLevels{
		byte Cethleann;
		byte Cichol;
		byte Macuil;
		byte Indech;
	}SaintStatue_UpgradeLevels;
	byte BattalionShopLevel;
	struct sBattalionShopStock{
		for(i=0;i<200;i++){
			struct sBattalionShopStockEntry{
				local BattalionID Name;
				Name = i;
				local string display;
				ubyte Count;
				display += Str("%d - ",Count);
				display += EnumToString(Name);
				display += Str("_%d",i);
			}BattEntry<read = display>;
		}
	}BattalionShopStock;
	struct sMonasteryMerchantStock{
		for(i=0;i<100;i++){
			struct sMonasteryMerchantStockEntry{
				//local MiscItem Name;
				//Name = i;
				//local string display;
				ubyte Count;
				//display += Str("%d - ",Count);
				//display += EnumToString(Name);
				//display += Str("_%d",i);
			}MonasteryMerchantStockEntry<comment="refer to Shopdata monasterymerchant table for items/merchants, 255 means infinite">;
		}
	}MonasterMerchantStock;
	struct sAnnaSecretShopStock{
		for(i=0;i<50;i++){
			struct sAnnaSecretShopStockEntry{
				//local MiscItem Name;
				//Name = i;
				//local string display;
				ubyte Count;
				//display += Str("%d - ",Count);
				//display += EnumToString(Name);
				//display += Str("_%d",i);
			}AnnaSecretShopStockEntry<comment="refer to Shopdata Anna secret shop table for items, 255 means infinite">;
		}
	}AnnaSecretShopStock;
	byte WeaponShopLevel;
	struct sWeaponShopStock{
		for(i=0;i<200;i++){
			struct sWeaponShopStockEntry{
				local Item Name;
				Name = i;
				local string display;
				ubyte Count;
				display += Str("%d - ",Count);
				display += EnumToString(Name);
				display += Str("_%d",i);
			}WeaponShopStockEntry<read=display>;
		}
	}WeaponShopStock;
	byte ItemShopLevel;
	struct sEquipmentShopStock{
		for(i=0;i<50;i++){
			struct sEquipmentShopStockEntry{
				local EquipID Name;
				Name = i;
				local string display;
				ubyte Count;
				display += Str("%d - ",Count);
				display += EnumToString(Name);
				display += Str("_%d",i);
			}EquipmentShopStockEntry<read=display>;
		}
	}EquipmentShopStock;
	struct sItemShopStock{
		for(i=0;i<200;i++){
			struct sItemShopStockEntry{
				local Consumables Name;
				Name = i;
				local string display;
				ubyte Count;
				display += Str("%d - ",Count);
				display += EnumToString(Name);
				display += Str("_%d",i);
			}ItemShopStockEntry<read=display>;
		}
	}ItemShopStock;
	ubyte unk10ByteArray0[10];
	ubyte unk10ByteArray1[10];
	ubyte unk100ByteArray[100];
	MiscItem SeedsSetInGreenhouse[5];
	ubyte CultivationMethod;
	MiscItem MiscItemByte;
	ubyte Calendar7Index;
	ubyte ComparedTo3d3;
	ubyte ComparedTo3d2;
	ubyte unk0x3d4[19];
	ubyte unk5Byte[5];
	ubyte unk0x3ec[8];
	struct sQuestStatuses{
		for(i=0;i<151;i++){
			struct sQuestStatusesEntry{
				local QuestID Name;
				Name = i;
				local string display;
				
				QuestStatus QS<name="Quest Status">;
				
				display = Str("%d - ", QS);
				display += EnumToString(Name);
			}QuestStatusesEntry<read=display>;
		};
	}QuestStatuses;
	struct sAuxBattles{
		ScenarioName NormalAuxBattle0;
		ScenarioName NormalAuxBattle1;
		ScenarioName CalendarEventAux;
	}AuxBattles;
	ubyte MatchesSomethingInFreeScenario0[3];
	ubyte unk0x491[6];
	ubyte FixedLobbyQuestTable0_Index;
	ubyte PreTimeSkipQuestionsAsked[13];
	ubyte PostTimeSkipQuestionsAsked[13];
	ubyte SeminarEnabledBits_[7];
	ubyte unk0x4b9[26];
	ubyte SpotDataEnabledFlagsA_[38];
	ubyte SpotDataEnabledFlagsB_[38];
	ubyte SpotDataEnabledFlagsC_[38];
	ubyte unk0x545[3];
	MiscItem MiscItemsToRemove[2];
	ubyte MiscItemAmountToRemove[2];
	ubyte BitFlagArray0x54c[13];
	ubyte unkByte0x559_RelatedToCharArray;
	ubyte unkByte0x55a_RelatedToCharArray;
	ubyte ProfessorRankRelated;
	ubyte unk0x55c;
	ubyte PlayLog_Wark;
	ubyte PlayLog_Lecture;
	ubyte PlayLog_ToBattle;
	ubyte PlayLog_Rest;
	ubyte PlayLog_TrainMount;
	ubyte PlayLog_Sing;
	ubyte PlayLog_Lunch;
	ubyte PlayLog_Cooking;
	ubyte PlayLog_Drill;
	ubyte PlayLog_TeaParty;
	ubyte PlayLog_Scout;
	ubyte unk0x568[4];
	ubyte InfluencerUpgradeLevel;
	struct sPaganAltarWeaponShopStock{
		for(i=0;i<50;i++){
			struct sPaganAltarWeaponShopStockEntry{
				ubyte Count;
			}PaganAltarWeaponShopStockEntry;
		}
	}PaganAltarWeaponShopStock;
	struct sPaganAltarEquipShopStock{
		for(i=0;i<30;i++){
			struct sPaganAltarEquipShopStockEntry{
				ubyte Count;
			}PaganAltarEquipShopStockEntry;
		}
	}PaganAltarEquipShopStock;
	struct sPaganAltarItemShopStock{
		for(i=0;i<20;i++){
			struct sPaganAltarItemShopStockEntry{
				ubyte Count;
			}PaganAltarItemShopStockEntry;
		}
	}PaganAltarItemShopStock;
	struct sMiscItemShopStock{
		for(i=0;i<30;i++){
			struct sMiscItemShopStockEntry{
				ubyte Count;
			}MiscItemShopStockEntry;
		}
	}MiscItemShopStock;
}Activities;